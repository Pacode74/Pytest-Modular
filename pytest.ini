[pytest]
# -n 2 means running our tests on two CPUs with plugin pytest-xdist.
# Run on max CPUs use -n auto
# Run without pytest-sugar plugin: `-p no:sugar`
# -s means print what is in the test
# -v verbose
# -vv means it will activate pytest-clarity plugin
# -p means stop showing warnings `-p no:warning`
# --durations=0 means check how much time it takes to run the test
# -m slow means run marked tests with 'slow`
# --strict-markers. When the --strict-markers command-line flag is passed, any unknown marks applied
#with the @pytest.mark.name_of_the_mark decorator will trigger an error.

## Either use `pytest coverage` or `coverage`:
# --cov=. means run pytest coverage
# download `pipenv install coverage' to get coverage test run commands:
# (Pytest-Modular) pavlo@pavlo:~/Documents/Projects/Pytest-Modular$ coverage run -m pytest .
# (Pytest-Modular) pavlo@pavlo:~/Documents/Projects/Pytest-Modular$ coverage html

addopts = -s -vv -p no:sugar


# if you want to run pytest-sugar then need to comment above line: addopts = -s -v


# register the markers:
markers =
    performance


# Ignore the folder from testing. Don't search in these directories for tests, ignore any test in this folder:
#norecursedirs = 'teacher notebooks'



## Use pytest-env plugin to configure to run Pytest from IDE when I want to debug.
## Pytest-env helps pytest understand in what environment it runs in.
## Use pytest.ini file to configure PyCharm to work with project environment variables.
## SECRET_KEY and EMAIL_HOST_PASSWORD are variables that installed during pipenv start up.
#env =
;    SECRET_KEY = SECRET_KEY
;    EMAIL_HOST_PASSWORD = EMAIL_HOST_PASSWORD